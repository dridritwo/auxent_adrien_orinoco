!function(t=".",e="__import__"){try{self[e]=new Function("u","return import(u)")}catch(n){const o=new URL(t,location),r=t=>{URL.revokeObjectURL(t.src),t.remove()};self[e]=t=>new Promise(((n,a)=>{const c=new URL(t,o);if(self[e].moduleMap[c])return n(self[e].moduleMap[c]);const l=new Blob([`import * as m from '${c}';`,`${e}.moduleMap['${c}']=m;`],{type:"text/javascript"}),i=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(l),onerror(){a(new Error(`Failed to import: ${t}`)),r(i)},onload(){n(self[e].moduleMap[c]),r(i)}});document.head.appendChild(i)})),self[e].moduleMap={}}}("/assets/");function t(t){window.localStorage.getItem("cart")||window.localStorage.setItem("cart","{}");let e=`${t._id}-${u(t.color)}`,n=i();n[e]?n[e].quantity+=1:(t.quantity=1,n[e]=t),window.localStorage.setItem("cart",JSON.stringify(n)),l()}function e(t){let e=i();return e[t].quantity+=1,window.localStorage.setItem("cart",JSON.stringify(e)),l(),e}function n(t){let e=i();return e[t].quantity>1?e[t].quantity-=1:delete e[t],window.localStorage.setItem("cart",JSON.stringify(e)),l(),e}function o(){window.localStorage.clear(),l(),a()}function r(){let t=i();console.log("cart",t)}function a(t){let e=document.querySelector("#total");if(t){let n=function(t){let e=0;if(null!=t&&"object"==typeof t){Object.keys(t).forEach((n=>{e+=t[n].price*t[n].quantity}))}return e}(t);e.innerHTML=`${n} â‚¬`}else e.innerHTML=""}function c(t){let e=i();return delete e[t],window.localStorage.setItem("cart",JSON.stringify(e)),l(),e}function l(){let t=document.querySelector("#cart-counter"),e=function(t){let e=0;if(null!=t&&"object"==typeof t){Object.keys(t).forEach((n=>{e+=t[n].quantity}))}return e}(i());t&&(t.innerText=e)}function i(){return JSON.parse(window.localStorage.getItem("cart"))}function u(t){return t.toString().replace(/\s/g,"")}export{t as a,o as b,a as c,e as d,n as e,r as f,i as g,c as r,u as s,l as u};
